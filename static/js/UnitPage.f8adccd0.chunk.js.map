{"version":3,"sources":["context/crud/types.jsx","context/crud/reducer.jsx","context/crud/actions.jsx","context/crud/selectors.jsx","context/crud/index.jsx","utils/uinqueId.js","request/request.js","redux/auth/actions.js","layout/DefaultLayout/index.jsx","layout/HeaderContent/index.jsx","components/CollapseBox/index.jsx","components/SidePanel/index.jsx","layout/CrudLayout/index.jsx","layout/DashboardLayout/index.jsx","redux/crud/actions.js","redux/crud/selectors.js","components/Loading/index.jsx","components/CreateForm/index.jsx","components/UpdateForm/index.jsx","utils/helpers.js","components/DeleteModal/index.jsx","components/ReadItem/index.jsx","components/SearchItem/index.jsx","components/DataTable/index.jsx","modules/CrudModule/CrudDataTable.jsx","modules/CrudModule/index.jsx","forms/UnitForm.jsx","pages/Unit.jsx"],"names":["OPEN_MODAL","CLOSE_MODAL","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelCollapsed","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","actionTypes","Error","contextActions","dispatch","modal","open","close","advancedBox","editBox","panel","collapse","collapsedBox","readBox","console","log","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","children","useReducer","value","useMemo","Provider","useCrudContext","context","useContext","undefined","crudContextAction","crudContextSelector","uniqueId","idstr","String","fromCharCode","Math","floor","random","ascicodeChar","length","headersInstance","ACCESS_TOKEN_NAME","tokenCookies","get","axiosInstance","axios","create","baseURL","API_BASE_URL","timeout","headers","request","entity","jsonData","a","defaults","post","response","successHandler","errorHandler","read","id","update","patch","delete","filter","option","equal","query","search","source","fields","question","cancelToken","token","list","page","items","entityUrl","CancelToken","login","loginAdminData","payload","loading","authService","data","success","authValue","current","result","admin","isLoggedIn","storePersist","set","history","push","logout","DefaultLayout","Header","Layout","HeaderContent","useDispatch","menu","Item","onClick","className","style","padding","background","overlay","placement","arrow","icon","UserOutlined","CollapseBoxButton","onChange","title","TopCollapseBox","isOpen","show","display","opacity","span","BottomCollapseBox","CollapseBox","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","isDiplayed","width","marginLeft","Sider","SidePanel","config","fixHeaderPanel","ADD_NEW_ENTITY","useState","styleSider","setStyleSider","opacitySider","setOpacitySider","useEffect","setTimeout","trigger","MenuOutlined","collapsible","collapsedWidth","zeroWidthTriggerStyle","right","top","left","Content","CrudLayout","sidePanelTopContent","sidePanelBottomContent","minHeight","margin","maxWidth","DashboardLayout","crud","actionType","keyState","currentPage","pagination","parseInt","pageSize","total","count","itemId","cancel","selectCrud","selectCurrentItem","createSelector","selectListItems","selectCreatedItem","selectUpdatedItem","selectDeletedItem","selectSearchedItems","Loading","isLoading","antIcon","LoadingOutlined","fontSize","spin","indicator","spinning","CreateForm","formElements","useSelector","isSuccess","Form","useForm","form","resetFields","layout","onFinish","fieldsValue","birthday","format","date","htmlType","UpdateForm","dayjs","setFieldsValue","_id","valueByString","obj","string","devider","split","map","key","reduce","o","x","join","Object","byString","s","replace","i","n","k","DeleteModal","entityDisplayLabels","deleteMessage","modalTitle","displayItem","setDisplayItem","labels","visible","onOk","onCancel","confirmLoading","ReadItem","readColumns","currentResult","listState","setListState","isFirstRun","useRef","props","propsKey","dataIndex","propsTitle","label","itemsList","item","gutter","SearchItem","searchConfig","displayLabels","searchFields","outputValue","setValue","options","setOptions","isTyping","delayTimer","optionResults","onSelect","currentItem","find","onSearch","searchText","clearTimeout","currentValue","notFoundContent","allowClear","placeholder","suffix","SearchOutlined","DataTable","DropDownRowMenu","AddNewItem","dataTableColumns","dataTableTitle","render","row","EllipsisOutlined","cursor","listResult","listIsLoading","handelDataTableLoad","useCallback","onBack","window","back","ghost","extra","columns","rowKey","dataSource","EyeOutlined","EditOutlined","DeleteOutlined","CrudDataTable","SidePanelTopContent","FixHeaderPanel","marginBottom","panelTitle","block","PlusOutlined","CrudModule","createForm","updateForm","useLayoutEffect","UnitForm","isUpdateForm","control","companies","setCompanies","then","res","name","required","message","Option","idx","rules","min","max","autoComplete","Unit","ENTITY_NAME","CREATE_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE"],"mappings":"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","file":"static/js/UnitPage.f8adccd0.chunk.js","sourcesContent":["export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_ADVANCED_BOX = \"OPEN_ADVANCED_BOX\";\nexport const CLOSE_ADVANCED_BOX = \"CLOSE_ADVANCED_BOX\";\n\nexport const OPEN_EDIT_BOX = \"OPEN_EDIT_BOX\";\nexport const CLOSE_EDIT_BOX = \"CLOSE_EDIT_BOX\";\n\nexport const OPEN_PANEL = \"OPEN_PANEL\";\nexport const CLOSE_PANEL = \"CLOSE_PANEL\";\nexport const COLLAPSE_PANEL = \"COLLAPSE_PANEL\";\n\nexport const OPEN_BOX = \"OPEN_BOX\";\nexport const CLOSE_BOX = \"CLOSE_BOX\";\nexport const COLLAPSE_BOX = \"COLLAPSE_BOX\";\n\nexport const OPEN_READ_BOX = \"OPEN_READ_BOX\";\nexport const CLOSE_READ_BOX = \"CLOSE_READ_BOX\";\nexport const COLLAPSE_READ_BOX = \"COLLAPSE_READ_BOX\";\n","import * as actionTypes from \"./types\";\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: !state.isPanelCollapsed,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from \"./types\";\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\n      },\n    },\n    editBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n        console.log(\"readBox open\");\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n        console.log(\"readBox close\");\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from \"react\";\nimport { initialState, contextReducer } from \"./reducer\";\nimport contextActions from \"./actions\";\nimport contextSelectors from \"./selectors\";\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","export default function uniqueId() {\n  // always start with a letter (for DOM friendlyness)\n  let idstr = String.fromCharCode(Math.floor(Math.random() * 25 + 65));\n  do {\n    // between numbers and characters (48 is 0 and 90 is Z (42-48 = 90)\n    const ascicodeChar = Math.floor(Math.random() * 25 + 65);\n    idstr += String.fromCharCode(ascicodeChar);\n    idstr += Math.floor(Math.random() * 99);\n  } while (idstr.length < 8);\n\n  return idstr;\n}\n","import axios from \"axios\";\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\nimport { token as tokenCookies } from \"@/auth\";\nimport errorHandler from \"./errorHandler\";\nimport successHandler from \"./successHandler\";\n\nconst headersInstance = { [ACCESS_TOKEN_NAME]: tokenCookies.get() };\n\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    ...headersInstance,\n  },\n});\n\nconst request = {\n  create: async (entity, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    console.log(\"jsonData\", jsonData);\n    try {\n      const response = await axiosInstance.post(entity + \"/\", jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  read: async (entity, id) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.get(entity + \"/read/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  update: async (entity, id, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.patch(\n        entity + \"/\" + id,\n        jsonData\n      );\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  delete: async (entity, id, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.delete(entity + \"/\" + id);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  filter: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      let filter = option.filter ? \"filter=\" + option.filter : \"\";\n      let equal = option.equal ? \"&equal=\" + option.equal : \"\";\n      let query = `?${filter}${equal}`;\n\n      const response = await axiosInstance.get(entity + \"/filter\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  search: async (entity, source, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\n    };\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let fields = option.fields ? \"fields=\" + option.fields : \"\";\n        let question = option.question ? \"&q=\" + option.question : \"\";\n        query = `?${fields}${question}`;\n      }\n      // headersInstance.cancelToken = source.token;\n      const response = await axiosInstance.get(entity + \"/\" + query, {\n        cancelToken: source.token,\n      });\n\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  list: async (entity, option = {}) => {\n    axiosInstance.defaults.headers = {\n      [ACCESS_TOKEN_NAME]: tokenCookies.get(),\n    };\n    console.log(tokenCookies.get());\n    try {\n      let query = \"\";\n      if (option !== {}) {\n        let page = option.page ? \"page=\" + option.page : \"\";\n        let items = option.items ? \"&items=\" + option.items : \"\";\n        query = `?${page}${items}`;\n      }\n\n      const response = await axiosInstance.get(entity + \"/\" + query);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n\n  post: async (entityUrl, jsonData, option = {}) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.post(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  get: async (entityUrl) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.get(entityUrl);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  patch: async (entityUrl, jsonData) => {\n    axiosInstance.defaults.headers = {\n      ...headersInstance,\n    };\n    try {\n      const response = await axiosInstance.patch(entityUrl, jsonData);\n      return successHandler(response);\n    } catch (error) {\n      return errorHandler(error);\n    }\n  },\n  source: () => {\n    // const CancelToken = await axiosInstance.CancelToken;\n\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    return source;\n  },\n};\nexport default request;\n","import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\n\nexport const login = (loginAdminData) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: { loading: true },\n  });\n  const data = await authService.login(loginAdminData);\n\n  if (data.success === true) {\n    const authValue = {\n      current: data.result.admin,\n      loading: false,\n      isLoggedIn: true,\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.result.admin,\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS,\n  });\n  history.push(\"/login\");\n};\n","import React from \"react\";\n\nimport { CrudContextProvider } from \"@/context/crud\";\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Layout, Avatar, Menu, Dropdown } from \"antd\";\n\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { logout } from \"@/redux/auth/actions\";\nimport uniqueId from \"@/utils/uinqueId\";\nconst { Header } = Layout;\n\nexport default function HeaderContent() {\n  const dispatch = useDispatch();\n\n  const menu = (\n    <Menu>\n      <Menu.Item key={`${uniqueId()}`} onClick={() => dispatch(logout())}>\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Header\n      className=\"site-layout-background\"\n      style={{ padding: 0, background: \"none\" }}\n    >\n      <Dropdown overlay={menu} placement=\"bottomRight\" arrow>\n        <Avatar icon={<UserOutlined />} />\n      </Dropdown>\n    </Header>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"none\", opacity: 0 }\n    : { display: \"block\", opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n  isPanelCollapsed,\n}) {\n  const collapsed = isCollapsed ? \"collapsed\" : \"\";\n  const isDiplayed = isPanelCollapsed ? \"-400px\" : \"0px\";\n  return (\n    <div\n      className=\"panelBox\"\n      style={{ width: \"400px\", marginLeft: isDiplayed }}\n    >\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={\"collapseBox \" + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>\n          {bottomContent}\n        </BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { Layout } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport CollapseBox from \"../CollapseBox\";\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({\n  config,\n  topContent,\n  bottomContent,\n  fixHeaderPanel,\n}) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelCollapsed, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [styleSider, setStyleSider] = useState(\"0px\");\n  const [opacitySider, setOpacitySider] = useState(\"1\");\n\n  useEffect(() => {\n    if (isPanelCollapsed) {\n      setStyleSider(\"-400px\");\n      setOpacitySider(0);\n    } else {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }\n\n    setTimeout(() => {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }, 300);\n  }, [isPanelCollapsed]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      trigger={<MenuOutlined className=\"trigger\" />}\n      width={400}\n      collapsible\n      collapsed={isPanelCollapsed}\n      collapsedWidth={\"0px\"}\n      onCollapse={collapsePanel}\n      zeroWidthTriggerStyle={{\n        right: \"-50px\",\n        top: \"15px\",\n      }}\n      style={{\n        background: \"#FFF\",\n        left: styleSider,\n        opacity: opacitySider,\n      }}\n    >\n      {fixHeaderPanel}\n      <CollapseBox\n        buttonTitle={ADD_NEW_ENTITY}\n        isPanelCollapsed={isPanelCollapsed}\n        isCollapsed={isBoxCollapsed}\n        onCollapse={collapsePanelBox}\n        topContent={topContent}\n        bottomContent={bottomContent}\n      ></CollapseBox>\n    </Sider>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport SidePanel from \"@/components/SidePanel\";\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <DefaultLayout>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SidePanel\n          config={config}\n          topContent={sidePanelTopContent}\n          bottomContent={sidePanelBottomContent}\n          fixHeaderPanel={fixHeaderPanel}\n        ></SidePanel>\n        <Layout className=\"site-layout\">\n          <HeaderContent />\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: \"50px 40px\",\n              margin: \"50px auto\",\n              width: \"100%\",\n              maxWidth: \"1000px\",\n            }}\n          >\n            {children}\n          </Content>\n        </Layout>\n      </Layout>\n    </DefaultLayout>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      <HeaderContent />\n      <Content\n        style={{\n          padding: \"30px 40px\",\n          margin: \"20px auto\",\n          width: \"100%\",\n          maxWidth: \"1100px\",\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import * as actionTypes from \"./types\";\nimport { request } from \"@/request\";\n\nexport const crud = {\n  resetState: () => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_STATE,\n    });\n  },\n  resetAction: (actionType) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_ACTION,\n      keyState: actionType,\n      payload: null,\n    });\n  },\n  currentItem: (data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ITEM,\n      payload: { ...data },\n    });\n  },\n  currentAction: (actionType, data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ACTION,\n      keyState: actionType,\n      payload: { ...data },\n    });\n  },\n  list: (entity, currentPage = 1) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"list\",\n      payload: null,\n    });\n\n    let data = await request.list(entity, { page: currentPage });\n\n    if (data.success === true) {\n      const result = {\n        items: data.result,\n        pagination: {\n          current: parseInt(data.pagination.page, 10),\n          pageSize: 10,\n          total: parseInt(data.pagination.count, 10),\n        },\n      };\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"list\",\n        payload: result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"list\",\n        payload: null,\n      });\n    }\n  },\n  create: (entity, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"create\",\n      payload: null,\n    });\n    console.log(\"jsonData action redux\", jsonData);\n    let data = await request.create(entity, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"create\",\n        payload: data.result,\n      });\n\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"create\",\n        payload: null,\n      });\n    }\n  },\n  read: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"read\",\n      payload: null,\n    });\n\n    let data = await request.read(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"read\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"read\",\n        payload: null,\n      });\n    }\n  },\n  update: (entity, itemId, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"update\",\n      payload: null,\n    });\n\n    let data = await request.update(entity, itemId, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"update\",\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"update\",\n        payload: null,\n      });\n    }\n  },\n\n  delete: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"delete\",\n      payload: null,\n    });\n\n    let data = await request.delete(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"delete\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"delete\",\n        payload: null,\n      });\n    }\n  },\n\n  search: (entity, source, option) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"search\",\n      payload: null,\n    });\n\n    source.cancel();\n\n    source = request.source();\n    let data = await request.search(entity, source, option);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"search\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"search\",\n        payload: null,\n      });\n    }\n  },\n};\n","import { createSelector } from \"reselect\";\n\nconst selectCrud = (state) => state.crud;\n\nexport const selectCurrentItem = createSelector(\n  [selectCrud],\n  (crud) => crud.current\n);\n\nexport const selectListItems = createSelector(\n  [selectCrud],\n  (crud) => crud.list\n);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) =>\n    list.result.items.find((item) => item._id === itemId)\n  );\n\nexport const selectCreatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.create\n);\n\nexport const selectUpdatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.update\n);\n\nexport const selectReadItem = createSelector([selectCrud], (crud) => crud.read);\n\nexport const selectDeletedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.delete\n);\n\nexport const selectSearchedItems = createSelector(\n  [selectCrud],\n  (crud) => crud.search\n);\n","import React from \"react\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nexport default function Loading({ isLoading, children }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <Spin indicator={antIcon} spinning={isLoading}>\n      {children}\n    </Spin>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCreatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nexport default function CreateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const [form] = Form.useForm();\n  const onSubmit = (fieldsValue) => {\n    if (fieldsValue) {\n      if (fieldsValue.birthday) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n      if (fieldsValue.date) {\n        fieldsValue = {\n          ...fieldsValue,\n          date: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n    }\n\n    dispatch(crud.create(entity, fieldsValue));\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"create\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  return (\n    <Loading isLoading={isLoading}>\n      <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n        {formElements}\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </Loading>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nexport default function UpdateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n\n  const { state, crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  const [form] = Form.useForm();\n\n  const onSubmit = (fieldsValue) => {\n    if (fieldsValue) {\n      if (fieldsValue.birthday) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n      if (fieldsValue.date) {\n        fieldsValue = {\n          ...fieldsValue,\n          birthday: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n        };\n      }\n    }\n\n    const id = current._id;\n    dispatch(crud.update(entity, id, fieldsValue));\n  };\n  useEffect(() => {\n    if (current) {\n      if (current.birthday) {\n        current.birthday = dayjs(current.birthday);\n      }\n      if (current.date) {\n        current.date = dayjs(current.date);\n      }\n      form.setFieldsValue(current);\n    }\n  }, [current]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"update\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  const { isEditBoxOpen } = state;\n\n  const show = isEditBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n          {formElements}\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import { parse } from \"querystring\";\nfunction getPageQuery() {\n  parse(window.location.href.split(\"?\")[1]);\n}\n\n/* \n To get nested object properties.\n admin = {\n    location: {\n        lat: 50,\n        long: 9\n    }\n }\n\n get(admin, 'location.lat')     // 50\n get(admin, 'location.foo.bar') // undefined\n*/\n\nexport function get(obj, key) {\n  return key.split(\".\").reduce(function (o, x) {\n    return o === undefined || o === null ? o : o[x];\n  }, obj);\n\n  // key.split('.').reduce(function(o, x) {\n  //     return (o === undefined || o === null) ? o : o[x];\n  //   }, obj);\n}\n\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n  s = s.replace(/^\\./, \"\"); // strip a leading dot\n  let a = s.split(\".\");\n  for (let i = 0, n = a.length; i < n; ++i) {\n    let k = a[i];\n    if (o !== null) {\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\n/* \n To check only if a property exists, without getting its value. It similer get function.\n*/\nexport function has(obj, key) {\n  return key.split(\".\").every(function (x) {\n    if (typeof obj !== \"object\" || obj === null || x in obj === false)\n      /// !x in obj or  x in obj === true *** if you find any bug\n      return false;\n    obj = obj[x];\n    return true;\n  });\n}\n\n/* \n convert indexes to properties\n*/\nexport function valueByString(obj, string, devider) {\n  if (devider === undefined) {\n    devider = \"|\";\n  }\n  return string\n    .split(devider)\n    .map(function (key) {\n      return get(obj, key);\n    })\n    .join(\" \");\n}\n\n/*\n Submit multi-part form using ajax.\n*/\nexport function toFormData(form) {\n  let formData = new FormData();\n  const elements = form.querySelectorAll(\"input, select, textarea\");\n  for (let i = 0; i < elements.length; ++i) {\n    const element = elements[i];\n    const name = element.name;\n\n    if (name && element.dataset.disabled !== \"true\") {\n      if (element.type === \"file\") {\n        const file = element.files[0];\n        formData.append(name, file);\n      } else {\n        const value = element.value;\n        if (value && value.trim()) {\n          formData.append(name, value);\n        }\n      }\n    }\n  }\n\n  return formData;\n}\n\n/*\n Format Date to display admin\n*/\nexport function formatDate(param) {\n  const date = new Date(param);\n  let day = date.getDate().toString();\n  let month = (date.getMonth() + 1).toString();\n  const year = date.getFullYear();\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  const fullDate = `${day}/${month}/${year}`;\n  return fullDate;\n}\n\n/*\n Format Datetime to display admin\n*/\nexport function formatDatetime(param) {\n  let time = new Date(param).toLocaleTimeString();\n  return formatDate(param) + \" \" + time;\n}\n\n/*\n Set object value in html\n*/\nexport function bindValue(obj, parentElement) {\n  parentElement.querySelectorAll(\"[data-property]\").forEach((element) => {\n    const type = element.dataset.type;\n    let value = valueByString(obj, element.dataset.property);\n    console.log({ type });\n    switch (type) {\n      case \"date\":\n        value = formatDate(value);\n        break;\n\n      case \"datetime\":\n        value = formatDatetime(value);\n        break;\n\n      case \"currency\":\n        value = value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n        break;\n\n      default:\n        break;\n    }\n    element.innerHTML = value;\n  });\n}\n\nexport default getPageQuery;\n","import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"antd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectDeletedItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function DeleteModal({ config }) {\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = \"Do you want delete : \",\n    modalTitle = \"Remove Item\",\n  } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { isModalOpen } = state;\n  const { modal } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState(\"\");\n\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list(entity));\n      dispatch(crud.resetAction(entity));\n    }\n    if (current) {\n      let labels = entityDisplayLabels\n        .map((x) => valueByString(current, x))\n        .join(\" \");\n\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current._id;\n    dispatch(crud.delete(entity, id));\n  };\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n  return (\n    <Modal\n      title={modalTitle}\n      visible={isModalOpen}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={isLoading}\n    >\n      <p>\n        {deleteMessage}\n        {displayItem}\n      </p>\n    </Modal>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCurrentItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function ReadItem({ config }) {\n  let { readColumns } = config;\n  const { result: currentResult } = useSelector(selectCurrentItem);\n  const { state } = useCrudContext();\n  const { isReadBoxOpen } = state;\n  const [listState, setListState] = useState([]);\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    console.log(\"currentResult :\", currentResult);\n    console.log(\"readColumns :\", readColumns);\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map((props) => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const value = valueByString(currentResult, propsKey);\n      list.push({ propsKey, label: propsTitle, value: value });\n    });\n    setListState(list);\n  }, [currentResult]);\n\n  const show = isReadBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  const itemsList = listState.map((item) => {\n    return (\n      <Row key={item.propsKey} gutter={12}>\n        <Col className=\"gutter-row\" span={8}>\n          <p>{item.label}</p>\n        </Col>\n        <Col className=\"gutter-row\" span={2}>\n          <p> : </p>\n        </Col>\n        <Col className=\"gutter-row\" span={14}>\n          <p>{item.value}</p>\n        </Col>\n      </Row>\n    );\n  });\n\n  console.log(\"itemsList :\", itemsList);\n  return <div style={show}>{itemsList}</div>;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { AutoComplete, Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { request } from \"@/request\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectSearchedItems } from \"@/redux/crud/selectors\";\n\nimport { Empty } from \"antd\";\n\nexport default function SearchItem({ config }) {\n  let { entity, searchConfig } = config;\n\n  const { displayLabels, searchFields, outputValue = \"_id\" } = searchConfig;\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const [options, setOptions] = useState([]);\n\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  let source = request.source();\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\n\n  const isTyping = useRef(false);\n\n  let delayTimer = null;\n  useEffect(() => {\n    isLoading && setOptions([{ label: \"... Searching\" }]);\n  }, [isLoading]);\n  const onSearch = (searchText) => {\n    isTyping.current = true;\n\n    clearTimeout(delayTimer);\n    delayTimer = setTimeout(function () {\n      if (isTyping.current && searchText !== \"\") {\n        dispatch(\n          crud.search(entity, source, {\n            question: searchText,\n            fields: searchFields,\n          })\n        );\n      }\n      isTyping.current = false;\n    }, 500);\n  };\n\n  const onSelect = (data) => {\n    const currentItem = result.find((item) => {\n      return item[outputValue] === data;\n    });\n\n    dispatch(crud.currentItem(currentItem));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n\n  const onChange = (data) => {\n    const currentItem = options.find((item) => {\n      return item.value === data;\n    });\n    const currentValue = currentItem ? currentItem.label : data;\n    setValue(currentValue);\n  };\n\n  useEffect(() => {\n    let optionResults = [];\n\n    result.map((item) => {\n      const labels = displayLabels.map((x) => item[x]).join(\" \");\n      optionResults.push({ label: labels, value: item[outputValue] });\n    });\n\n    setOptions(optionResults);\n  }, [result]);\n\n  return (\n    <AutoComplete\n      value={value}\n      options={options}\n      style={{\n        width: \"100%\",\n      }}\n      onSelect={onSelect}\n      onSearch={onSearch}\n      onChange={onChange}\n      notFoundContent={!isSuccess ? <Empty /> : \"\"}\n      allowClear={true}\n      placeholder=\"Your Search here\"\n    >\n      <Input suffix={<SearchOutlined />} />\n    </AutoComplete>\n  );\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { Dropdown, Button, PageHeader, Table } from \"antd\";\n\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectListItems } from \"@/redux/crud/selectors\";\n\nimport uniqueId from \"@/utils/uinqueId\";\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  let { entity, dataTableColumns, dataTableTitle } = config;\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: \"\",\n      render: (row) => (\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={[\"click\"]}>\n          <EllipsisOutlined style={{ cursor: \"pointer\", fontSize: \"24px\" }} />\n        </Dropdown>\n      ),\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } = useSelector(\n    selectListItems\n  );\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    dispatch(crud.list(entity, pagination.current));\n  }, []);\n\n  useEffect(() => {\n    dispatch(crud.list(entity));\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: \"20px 0px\",\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { Button, Menu } from \"antd\";\nimport { EyeOutlined, EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectItemById } from \"@/redux/crud/selectors\";\nimport { useCrudContext } from \"@/context/crud\";\nimport uniqueId from \"@/utils/uinqueId\";\nimport DataTable from \"@/components/DataTable\";\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n  const item = useSelector(selectItemById(row._id));\n  const Show = () => {\n    dispatch(crud.currentItem(item));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentAction(\"update\", item));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction(\"delete\", item));\n    modal.open();\n  }\n  return (\n    <Menu style={{ width: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item\n        key={`${uniqueId()}`}\n        icon={<DeleteOutlined />}\n        onClick={Delete}\n      >\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function CrudDataTable({ config }) {\n  return (\n    <DataTable\n      config={config}\n      DropDownRowMenu={DropDownRowMenu}\n      AddNewItem={AddNewItem}\n    />\n  );\n}\n","import React, { useLayoutEffect } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport CreateForm from \"@/components/CreateForm\";\nimport UpdateForm from \"@/components/UpdateForm\";\nimport DeleteModal from \"@/components/DeleteModal\";\nimport ReadItem from \"@/components/ReadItem\";\nimport SearchItem from \"@/components/SearchItem\";\n\nimport { useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\n\nimport { CrudLayout } from \"@/layout\";\n\nimport CrudDataTable from \"./CrudDataTable\";\n\nfunction SidePanelTopContent({ config, formElements }) {\n  return (\n    <>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>\n            {config.panelTitle}\n          </h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button\n            onClick={addNewItem}\n            block={true}\n            icon={<PlusOutlined />}\n          ></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default function CrudModule({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={\n        <CreateForm config={config} formElements={createForm} />\n      }\n      sidePanelTopContent={\n        <SidePanelTopContent config={config} formElements={updateForm} />\n      }\n    >\n      <CrudDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n","import React from \"react\";\nimport { useState , useEffect} from 'react';\nimport { Button, Form, Input, Switch, Select } from \"antd\";\nimport { request } from \"@/request\";\n\nexport default function UnitForm({ isUpdateForm = false }) {\n\n  const [control, setControl] = useState(false)\n  const [companies, setCompanies] = useState([])\n  useEffect(() => {\n    const resCompanies = request.list('company').then(res => {\n      setCompanies(res.result)\n    })\n  },[control]); \n\n  return (\n    <>\n\n      <Form.Item label=\"Select\"\n        name=\"company_id\"\n        label=\"Company\"\n        rules={[\n          {\n            required: true,\n            message: \"Please choose the company!\",\n          },\n        ]}\n      >\n        <Select>\n          <Select.Option value=\"\">----</Select.Option>\n          {\n            companies.length && companies.map((row,idx) => {\n              return (\n                <Select.Option key={idx} value={row._id}>{row.name}</Select.Option>\n              )\n            })\n          }\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        name=\"name\"\n        label=\"Name\"\n        rules={[\n          {\n            min: 10,\n            message: \"Minimum 10 letters!\",\n          },\n          {\n            max: 50,\n            message: \"Maximun 50 letters!\",\n          },\n          {\n            required: true,\n            message: \"Please input your name!\",\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\"/>\n      </Form.Item>\n    </>\n  );\n}\n","import React from \"react\";\nimport CrudModule from \"@/modules/CrudModule\";\nimport Form from \"@/forms/UnitForm\";\n\nfunction Unit() {\n  const entity = \"unit\";\n  const searchConfig = {\n    displayLabels: [\"name\"],\n    searchFields: \"name\",\n    outputValue: \"_id\",\n  };\n\n  const panelTitle = \"Unit Panel\";\n  const dataTableTitle = \"Unit Lists\";\n  const entityDisplayLabels = [\"name\"];\n\n  const readColumns = [\n    {\n      title: \"Id\",\n      dataIndex: \"_id\",\n    },\n    {\n      title: \"Company\",\n      dataIndex: \"company.name\",\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n    },\n  ];\n  const dataTableColumns = [\n    {\n      title: \"Company\",\n      dataIndex: \"company\",\n      render: value => (\n        <>\n          {(value)?value.name:null}\n        </>\n      )\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n    },\n  ];\n\n  const ADD_NEW_ENTITY = \"Add new unit\";\n  const DATATABLE_TITLE = \"Unit List\";\n  const ENTITY_NAME = \"unit\";\n  const CREATE_ENTITY = \"Create unit\";\n  const UPDATE_ENTITY = \"Update unit\";\n  const config = {\n    entity,\n    panelTitle,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <CrudModule\n      createForm={<Form />}\n      updateForm={<Form isUpdateForm={true} />}\n      config={config}\n    />\n  );\n}\n\nexport default Unit;\n"],"sourceRoot":""}