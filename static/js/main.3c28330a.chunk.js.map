{"version":3,"sources":["components/PageLoader/index.jsx","request/errorHandler.js","request/successHandler.js","redux/auth/selectors.js","router/PublicRoute.jsx","router/AuthRouter.jsx","router/PrivateRoute.jsx","router/AppRouter.jsx","layout/Navigation/index.jsx","router/index.jsx","redux/auth/reducer.js","redux/crud/reducer.js","redux/search/types.js","redux/search/reducer.js","redux/rootReducer.js","redux/store.js","app/index.jsx","hooks/useNetwork/index.jsx","serviceWorker.jsx","index.jsx","redux/crud/types.js","redux/auth/types.js","redux/storePersist.js","config/serverApiConfig.js","request/codeMessage.js","auth/auth.service.js","auth/cookie.js","utils/history.jsx"],"names":["PageLoader","className","size","errorHandler","error","emptyResult","response","status","message","data","errorText","codeMessage","notification","config","duration","description","jwtExpired","history","push","success","result","successHandler","url","authSelect","state","auth","selectAuth","createSelector","current","isLoggedIn","PublicRoute","Component","component","rest","render","props","authService","get","to","motion","div","initial","x","animate","exit","scale","Login","lazy","NotFound","AuthRouter","location","useLocation","fallback","AnimatePresence","exitBeforeEnter","path","exact","pathname","PrivateRoute","type","damping","stiffness","transition","y","opacity","Dashboard","Company","User","Unit","Asset","Logout","AppRouter","Sider","Layout","Menu","SubMenu","Navigation","useState","collapsed","setCollapsed","collapsible","onCollapse","style","zIndex","theme","defaultSelectedKeys","mode","Item","icon","DashboardOutlined","BankOutlined","UserOutlined","GoldOutlined","DeploymentUnitOutlined","Router","useSelector","useEffect","console","log","minHeight","INITIAL_STATE","loading","authReducer","action","actionTypes","payload","INITIAL_KEY_STATE","isLoading","isSuccess","list","items","pagination","pageSize","total","create","update","delete","read","search","crudReducer","keyState","INIT_STATE","RESET_STATE","CURRENT_SELECTED","REQUEST_LOADING","REQUEST_SUCCESS","REQUEST_FAILED","RESET_REF","INITIAL_REF_STATE","selected","searchReducer","newState","map","refKey","appReducer","combineReducers","crud","rootReducer","undefined","middleware","createLogger","thunk","configStore","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initialState","storePersist","store","createStore","App","navigator","onLine","isOnline","setNetwork","useNetwork","title","subTitle","extra","href","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","CURRENT_ITEM","CURRENT_ACTION","RESET_ACTION","FAILED_REQUEST","LOADING_REQUEST","LOGIN_SUCCESS","LOGOUT_SUCCESS","set","key","localStorage","setItem","JSON","stringify","getItem","parse","remove","removeItem","getAll","clear","process","REACT_APP_DEV_REMOTE","API_BASE_URL","ACCESS_TOKEN_NAME","login","loginAdminData","a","axios","post","Date","getTime","token","logout","cookieName","getCookie","cookieValue","createBrowserHistory"],"mappings":"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","file":"static/js/main.3c28330a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst PageLoader = () => {\n  return (\n    <div className=\"center\">\n      <Spin size=\"large\" />\n    </div>\n  );\n};\nexport default PageLoader;\n","import { notification } from \"antd\";\nimport history from \"@/utils/history\";\nimport codeMessage from \"./codeMessage\";\n\nconst errorHandler = (error, emptyResult = null) => {\n  const { response } = error;\n\n  if (!response) {\n    // notification.config({\n    //   duration: 20,\n    // });\n    // notification.error({\n    //   message: \"No internet connection\",\n    //   description: \"Cannot connect to the server, Check your internet network\",\n    // });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"Cannot connect to the server, Check your internet network\",\n    };\n  } else if (response && response.status) {\n    const message = response.data && response.data.message;\n    const errorText = message || codeMessage[response.status];\n    const { status } = response;\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText,\n    });\n    if (error.response.data.jwtExpired) {\n      history.push(\"/logout\");\n    }\n    return response.data;\n  } else {\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: \"Unknown Error\",\n      description: \"An unknown error occurred in the app, please try again. \",\n    });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"An unknown error occurred in the app, please try again. \",\n    };\n  }\n};\n\nexport default errorHandler;\n","import { notification } from \"antd\";\n\nimport codeMessage from \"./codeMessage\";\n\nconst successHandler = (response, typeNotification = {}) => {\n  if (!response.data.result) {\n    response = {\n      ...response,\n      status: 404,\n      url: null,\n      data: {\n        success: false,\n        result: null,\n      },\n    };\n  }\n  const { data } = response;\n  if (data.success === false) {\n    const message = data && data.message;\n    const errorText = message || codeMessage[response.status];\n    const { status } = response;\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText,\n    });\n  } else {\n    const message = data && data.message;\n    const successText = message || codeMessage[response.status];\n    const { status } = response;\n    // notification.config({\n    //   duration: 20,\n    // });\n    // notification.success({\n    //   message: `Request success`,\n    //   description: successText,\n    // });\n  }\n\n  return data;\n};\n\nexport default successHandler;\n","import { createSelector } from \"reselect\";\nconst authSelect = (state) => state.auth;\n\nexport const selectAuth = createSelector([authSelect], (auth) => auth);\nexport const selectCurrentAdmin = createSelector(\n  [authSelect],\n  (auth) => auth.current\n);\n\nexport const isLoggedIn = createSelector(\n  [authSelect],\n  (auth) => auth.isLoggedIn\n);\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport * as authService from \"@/auth\";\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  return (\n    // Show the component only when the admin is logged in\n    // Otherwise, redirect the admin to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        authService.token.get() ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <motion.div\n            initial={{ x: 200 }}\n            animate={{ x: 0 }}\n            exit={{ scale: 0 }}\n          >\n            <Component {...props} />\n          </motion.div>\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React, { lazy, Suspense } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport PublicRoute from \"./PublicRoute\";\nimport PageLoader from \"@/components/PageLoader\";\n\nconst Login = lazy(() =>\n  import(/*webpackChunkName:'LoginPage'*/ \"@/pages/Login\")\n);\n\nconst NotFound = lazy(() =>\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\n);\n\nexport default function AuthRouter() {\n  const location = useLocation();\n  return (\n    <Suspense fallback={<PageLoader />}>\n      <AnimatePresence exitBeforeEnter initial={false}>\n        <Switch location={location} key={location.pathname}>\n          <PublicRoute\n            path=\"/\"\n            component={Login}\n            render={() => <Redirect to=\"/login\" />}\n          />\n          <PublicRoute component={Login} path=\"/login\" exact />\n          <Route\n            path=\"*\"\n            component={NotFound}\n            render={() => <Redirect to=\"/notfound\" />}\n          />\n        </Switch>\n      </AnimatePresence>\n    </Suspense>\n  );\n}\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport * as authService from \"@/auth\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const config = {\n    type: \"spring\",\n    damping: 20,\n    stiffness: 100,\n  };\n  return (\n    // Show the component only when the admin is logged in\n    // Otherwise, redirect the admin to /signin page\n\n    <Route\n      {...rest}\n      render={(props) =>\n        authService.token.get() ? (\n          <motion.div\n            transition={config}\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ y: -20, opacity: 0 }}\n          >\n            <Component {...props} />\n          </motion.div>\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { lazy, Suspense } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\nimport PageLoader from \"@/components/PageLoader\";\n\nconst Dashboard = lazy(() =>\n  import(/*webpackChunkName:'DashboardPage'*/ \"@/pages/Dashboard\")\n);\n\nconst Company = lazy(() =>\n  import(/*webpackChunkName:'CompanyPage'*/ \"@/pages/Company\")\n);\n\nconst User = lazy(() =>\n  import(/*webpackChunkName:'UserPage'*/ \"@/pages/User\")\n);\n\nconst Unit = lazy(() =>\n  import(/*webpackChunkName:'UnitPage'*/ \"@/pages/Unit\")\n);\n\nconst Asset = lazy(() =>\n  import(/*webpackChunkName:'AssetPage'*/ \"@/pages/Asset\")\n);\n\n\nconst Logout = lazy(() =>\n  import(/*webpackChunkName:'LogoutPage'*/ \"@/pages/Logout\")\n);\nconst NotFound = lazy(() =>\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\n);\n\nexport default function AppRouter() {\n  const location = useLocation();\n  return (\n    <Suspense fallback={<PageLoader />}>\n      <AnimatePresence exitBeforeEnter initial={false}>\n        <Switch location={location} key={location.pathname}>\n          <PrivateRoute path=\"/\" component={Dashboard} render={() => <Redirect to=\"/dashboard\" />} exact/>\n          <PrivateRoute component={Dashboard} path=\"/dashboard\"  exact />\n          <PrivateRoute component={Company} path=\"/company\" exact />\n          <PrivateRoute component={User} path=\"/user\" exact />\n          <PrivateRoute component={Unit} path=\"/unit\" exact />\n          <PrivateRoute component={Asset} path=\"/asset\" exact />\n          <PrivateRoute component={Logout} path=\"/logout\" exact />\n          <PublicRoute path=\"/login\" render={() => <Redirect to=\"/\" />} />\n          <Route\n            path=\"*\"\n            component={NotFound}\n            render={() => <Redirect to=\"/notfound\" />}\n          />\n        </Switch>\n      </AnimatePresence>\n    </Suspense>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Layout, Menu } from \"antd\";\nimport {\n  GoldOutlined,\n  UserOutlined,\n  DeploymentUnitOutlined,\n  DashboardOutlined,\n  BankOutlined\n} from \"@ant-design/icons\";\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nfunction Navigation() {\n  const [collapsed, setCollapsed] = useState(false);\n\n  const onCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n  return (\n    <>\n      <Sider\n        collapsible\n        collapsed={collapsed}\n        onCollapse={onCollapse}\n        style={{\n          zIndex: 1000,\n        }}\n      >\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n          <Menu.Item key=\"1\" icon={<DashboardOutlined />}>\n            <Link to=\"/\" />\n            Home Page\n          </Menu.Item>\n          \n          <Menu.Item key=\"2\" icon={<BankOutlined />}>\n            <Link to=\"/company\" />\n            Company\n          </Menu.Item>\n\n          <Menu.Item key=\"3\" icon={<UserOutlined />}>\n            <Link to=\"/user\" />\n            User\n          </Menu.Item>\n          \n          <Menu.Item key=\"4\" icon={<GoldOutlined />}>\n            <Link to=\"/unit\" />\n            Unit\n          </Menu.Item>\n\n          <Menu.Item key=\"5\" icon={<DeploymentUnitOutlined />}>\n            <Link to=\"/asset\" />\n            Asset\n          </Menu.Item>\n          \n          \n        </Menu>\n      </Sider>\n    </>\n  );\n}\nexport default Navigation;\n","// export { default as AuthRouter } from \"./AuthRouter\";\n// export { default as AppRouter } from \"./AppRouter\";\nimport React, { useEffect } from \"react\";\n\nimport AuthRouter from \"./AuthRouter\";\nimport AppRouter from \"./AppRouter\";\n\nimport { Layout } from \"antd\";\nimport Navigation from \"@/layout/Navigation\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectAuth } from \"@/redux/auth/selectors\";\n\nexport default function Router() {\n  const { isLoggedIn } = useSelector(selectAuth);\n\n  useEffect(() => {\n    console.log(\"isLoggedIn : \", isLoggedIn);\n  }, [isLoggedIn]);\n\n  if (isLoggedIn === false)\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <AuthRouter />\n      </Layout>\n    );\n  else\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Navigation />\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <AppRouter />\n        </Layout>\n      </Layout>\n    );\n}\n\n// export default App;\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_STATE = {\n  current: {},\n  loading: false,\n  isLoggedIn: false,\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.LOADING_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.FAILED_REQUEST:\n      return INITIAL_STATE;\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        current: action.payload,\n        loading: false,\n        isLoggedIn: true,\n      };\n    case actionTypes.LOGOUT_SUCCESS:\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_KEY_STATE = {\n  result: null,\n  current: null,\n  isLoading: false,\n  isSuccess: false,\n};\n\nconst INITIAL_STATE = {\n  current: {\n    result: null,\n  },\n  list: {\n    result: {\n      items: [],\n      pagination: {\n        current: 1,\n        pageSize: 10,\n        total: 1,\n      },\n    },\n    isLoading: false,\n    isSuccess: false,\n  },\n  create: INITIAL_KEY_STATE,\n  update: INITIAL_KEY_STATE,\n  delete: INITIAL_KEY_STATE,\n  read: INITIAL_KEY_STATE,\n  search: { ...INITIAL_KEY_STATE, result: [] },\n};\n\nconst crudReducer = (state = INITIAL_STATE, action) => {\n  const { payload, keyState } = action;\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n    case actionTypes.CURRENT_ITEM:\n      return {\n        ...state,\n        current: {\n          result: payload,\n        },\n      };\n    case actionTypes.REQUEST_LOADING:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          isLoading: true,\n        },\n      };\n    case actionTypes.REQUEST_FAILED:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          isLoading: false,\n          isSuccess: false,\n        },\n      };\n    case actionTypes.REQUEST_SUCCESS:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          result: payload,\n          isLoading: false,\n          isSuccess: true,\n        },\n      };\n    case actionTypes.CURRENT_ACTION:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_KEY_STATE,\n          current: payload,\n        },\n      };\n    case actionTypes.RESET_ACTION:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_STATE[keyState],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default crudReducer;\n","export const INIT_STATE = \"SEARCH_INIT_STATE\";\nexport const RESET_STATE = \"SEARCH_RESET_STATE\";\nexport const CURRENT_SELECTED = \"SEARCH_CURRENT_SELECTED\";\n\nexport const REQUEST_LOADING = \"SEARCH_REQUEST_LOADING\";\nexport const REQUEST_SUCCESS = \"SEARCH_REQUEST_SUCCESS\";\nexport const REQUEST_FAILED = \"SEARCH_REQUEST_FAILED\";\n\nexport const RESET_REF = \"SEARCH_RESET_REF\";\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_REF_STATE = {\n  result: [],\n  selected: null,\n  isLoading: false,\n  isSuccess: false,\n};\nconst INITIAL_STATE = {};\n\nconst searchReducer = (state = INITIAL_STATE, action) => {\n  const { payload = null, keyState = null } = action;\n  switch (action.type) {\n    case actionTypes.INIT_STATE: {\n      let newState = {};\n      payload.map((refKey) => (newState[refKey] = INITIAL_REF_STATE));\n      return newState;\n    }\n\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n\n    case actionTypes.RESET_REF:\n      return {\n        ...state,\n        [keyState]: INITIAL_REF_STATE,\n      };\n\n    case actionTypes.CURRENT_SELECTED:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          selected: payload,\n        },\n      };\n    case actionTypes.REQUEST_LOADING:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_REF_STATE,\n          isLoading: true,\n        },\n      };\n    case actionTypes.REQUEST_FAILED:\n      return {\n        ...state,\n        [keyState]: INITIAL_REF_STATE,\n      };\n    case actionTypes.REQUEST_SUCCESS:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_REF_STATE,\n          result: payload,\n          isSuccess: true,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { combineReducers } from \"redux\";\n\nimport { reducer as authReducer } from \"./auth\";\nimport { reducer as crudReducer } from \"./crud\";\nimport { reducer as searchReducer } from \"./search\";\n\nimport * as actionTypes from \"./auth/types\";\n\n// Combine all reducers.\n\nconst appReducer = combineReducers({\n  auth: authReducer,\n  crud: crudReducer,\n  search: searchReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === actionTypes.LOGOUT_SUCCESS) {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nimport rootReducer from \"./rootReducer\";\nimport storePersist from \"./storePersist\";\n\nconst logger = createLogger();\nlet middleware = [thunk];\n\nlet configStore = applyMiddleware(...middleware);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [...middleware, logger];\n  configStore = composeEnhancers(applyMiddleware(...middleware));\n}\n\nconst initialState = storePersist.get(\"auth\")\n  ? { auth: storePersist.get(\"auth\") }\n  : {};\n\nconst store = createStore(rootReducer, initialState, configStore);\n\nexport default store;\n","import React, { useEffect, useState, Suspense } from \"react\";\nimport { Router as RouterHistory } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport Router from \"@/router\";\nimport history from \"@/utils/history\";\nimport store from \"@/redux/store\";\n\nimport { Button, Result } from \"antd\";\n\nimport useNetwork from \"@/hooks/useNetwork\";\n\nfunction App() {\n  const { isOnline: isNetwork } = useNetwork();\n\n  if (!isNetwork)\n    return (\n      <>\n        <Result\n          status=\"404\"\n          title=\"No Internet Connection\"\n          subTitle=\"Check your Internet Connection or your network.\"\n          extra={\n            <Button href=\"/\" type=\"primary\">\n              Try Again\n            </Button>\n          }\n        />\n      </>\n    );\n  else {\n    return (\n      <RouterHistory history={history}>\n        <Provider store={store}>\n          <Router />\n        </Provider>\n      </RouterHistory>\n    );\n  }\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport default function useNetwork() {\n  const [isOnline, setNetwork] = useState(window.navigator.onLine);\n  useEffect(() => {\n    setNetwork(window.navigator.onLine);\n  }, [window.navigator.onLine]);\n  return { isOnline };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n// import \"./index.css\";\nimport App from \"./app\"\nimport \"./style/app.less\"\nimport * as serviceWorker from \"./serviceWorker\"\n\n//console.log(\"process env\", process.env.NODE_ENV)\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export const RESET_STATE = \"CRUD_RESET_STATE\";\nexport const CURRENT_ITEM = \"CRUD_CURRENT_ITEM\";\n\nexport const REQUEST_LOADING = \"CRUD_REQUEST_LOADING\";\nexport const REQUEST_SUCCESS = \"CRUD_REQUEST_SUCCESS\";\nexport const REQUEST_FAILED = \"CRUD_REQUEST_FAILED\";\n\nexport const CURRENT_ACTION = \"CRUD_CURRENT_ACTION\";\nexport const RESET_ACTION = \"CRUD_RESET_ACTION\";\n","export const FAILED_REQUEST = \"AUTH_FAILED_REQUEST\";\nexport const LOADING_REQUEST = \"AUTH_LOADING_REQUEST\";\n\nexport const LOGIN_SUCCESS = \"AUTH_LOGIN_SUCCESS\";\n\nexport const LOGOUT_SUCCESS = \"AUTH_LOGOUT_SUCCESS\";\n","export const storePersist = {\n  set: (key, state) => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  },\n  get: (key) => {\n    const result = window.localStorage.getItem(key);\n    return JSON.parse(result);\n  },\n  remove: (key) => {\n    window.localStorage.removeItem(key);\n  },\n  getAll: () => {\n    return window.localStorage;\n  },\n  clear: () => {\n    window.localStorage.clear();\n  },\n};\n\nexport default storePersist;\n","console.log(\n  \"process env REACT_APP_DEV_REMOTE\",\n  process.env.REACT_APP_DEV_REMOTE\n)\n\nexport const API_BASE_URL =\n  process.env.NODE_ENV == \"production\" ||\n  process.env.REACT_APP_DEV_REMOTE == \"remote\"\n    ? \"https://tractianlrc.herokuapp.com/backend/api/v1/\"\n    : \"http://localhost:3001/backend/api/v1/\"\n\n// export const API_BASE_URL = \"https://starter-mern.herokuapp.com/api/\";\nexport const ACCESS_TOKEN_NAME = \"x-auth-token\"\n","const codeMessage = {\n  200: \"The server successfully returned the requested data. \",\n  201: \"Create or modify data successfully. \",\n  202: \"A request has entered the background queue (asynchronous task). \",\n  204: \"Delete data successfully. \",\n  400: \"There was an error in the request sent, and the server did not create or modify data. \",\n  401: \"The admin does not have permission please try to login again. \",\n  403: \"The admin is authorized, but access is forbidden. \",\n  404: \"The request sent is for a record that does not exist, and the server is not operating. \",\n  406: \"The requested format is not available. \",\n  410: \"The requested resource has been permanently deleted and will no longer be available. \",\n  422: \"When creating an object, a validation error occurred. \",\n  500: \"An error occurred in the server, please check the server. \",\n  502: \"Gateway error. \",\n  503: \"The service is unavailable, the server is temporarily overloaded or maintained. \",\n  504: \"The gateway has timed out. \",\n};\n\nexport default codeMessage;\n","import { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\n\nimport axios from \"axios\";\nimport errorHandler from \"@/request/errorHandler\";\nimport successHandler from \"@/request/successHandler\";\nimport storePersist from \"@/redux/storePersist\";\n\nimport { getCookie, setCookie, deleteCookie } from \"./cookie\";\n\nexport const login = async (loginAdminData) => {\n  try {\n    const response = await axios.post(\n      API_BASE_URL + `login?timestamp=${new Date().getTime()}`,\n      loginAdminData\n    );\n    token.set(response.data.result.token);\n    return successHandler(response);\n  } catch (error) {\n    return errorHandler(error);\n  }\n};\n\nexport const logout = () => {\n  token.remove();\n  storePersist.clear();\n};\n\nexport const token = {\n  get: () => {\n    return getCookie(ACCESS_TOKEN_NAME);\n  },\n  set: (token) => {\n    return setCookie(ACCESS_TOKEN_NAME, token);\n  },\n  remove: () => {\n    return deleteCookie(ACCESS_TOKEN_NAME);\n  },\n};\n","// export function getCookie(cookieName) {\n//   let name = cookieName + \"=\";\n//   let ca = document.cookie.split(\";\");\n//   for (let i = 0; i < ca.length; i++) {\n//     let c = ca[i];\n//     while (c.charAt(0)===\" \") {\n//       c = c.substring(1);\n//     }\n//     if (c.indexOf(name)===0) {\n//       return c.substring(name.length, c.length);\n//     }\n//   }\n//   return \"\";\n// }\n\n// export function setCookie(cookieName, cookieValue, expireDays = 1) {\n//   let d = new Date();\n//   d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\n//   let expires = \"expires=\" + d.toUTCString();\n//   document.cookie = cookieName + \"=\" + cookieValue + \";\" + expires + \";path=/\";\n// }\n\n// export function deleteCookie(cookieName) {\n//   document.cookie = cookieName + \"=; Max-Age=-99999999; \";\n//   return true;\n// }\n\nexport function setCookie(cookieName, cookieValue) {\n  window.localStorage.setItem(cookieName, JSON.stringify(cookieValue));\n}\nexport function getCookie(cookieName) {\n  const result = window.localStorage.getItem(cookieName);\n  return JSON.parse(result);\n}\nexport function deleteCookie(cookieName) {\n  window.localStorage.removeItem(cookieName);\n  return true;\n}\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n"],"sourceRoot":""}